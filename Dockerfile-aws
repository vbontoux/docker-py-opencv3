#Dockerfile for python-opencv

# Pull base image.
FROM amazonlinux

MAINTAINER  <v.bontoux@free.fr>

# Install packages.
RUN yum update -y
RUN yum install -y git cmake gcc-c++ gcc python27-devel chrpath
RUN mkdir -p /tmp/lambda-package/cv2 /tmp/build/numpy
RUN yum install -y wget
RUN wget https://bootstrap.pypa.io/get-pip.py
RUN python get-pip.py

# Install numpy and package it
RUN pip install --install-option="--prefix=/tmp/build/numpy/" numpy
RUN cp -rf /tmp/build/numpy/lib64/python2.7/site-packages/numpy /tmp/lambda-package

# Compile opencv package it
WORKDIR /tmp/
RUN NUMPY=/tmp/lambda-package/numpy/core/include
WORKDIR /tmp/build/
RUN git clone -b 3.1.0 https://github.com/Itseez/opencv_contrib.git
RUN git clone -b 3.1.0 https://github.com/Itseez/opencv.git
WORKDIR /tmp/build/opencv/
RUN cmake                                       \
        -D CMAKE_BUILD_TYPE=RELEASE             \
        -D WITH_TBB=ON                          \
        -D WITH_IPP=ON                          \
        -D WITH_V4L=ON                          \
        -D ENABLE_AVX=ON                        \
        -D ENABLE_SSSE3=ON                      \
        -D ENABLE_SSE41=ON                      \
        -D ENABLE_SSE42=ON                      \
        -D ENABLE_POPCNT=ON                     \
        -D ENABLE_FAST_MATH=ON                  \
        -D BUILD_EXAMPLES=OFF                   \
        -D PYTHON2_NUMPY_INCLUDE_DIRS="/tmp/lambda-package/numpy/core/include"  \
        -D WITH_LIBV4L=OFF \
        -D WITH_FFMPEG=0 \
        -D OPENCV_EXTRA_MODULES_PATH=/tmp/build/opencv_contrib/modules \
        . 
RUN make
RUN cp /tmp/build/opencv/lib/cv2.so /tmp/lambda-package/cv2/__init__.so
RUN cp -L /tmp/build/opencv/lib/*.so.3.1 /tmp/lambda-package/cv2
RUN strip --strip-all /tmp/lambda-package/cv2/*
RUN chrpath -r '$ORIGIN' /tmp/lambda-package/cv2/__init__.so
RUN touch /tmp/lambda-package/cv2/__init__.py
COPY feature-matching-sift.py /tmp/lambda-package/
COPY photo.png /tmp/lambda-package/
COPY ref.png /tmp/lambda-package/
COPY photo.jpg /tmp/lambda-package/
COPY ref.jpg /tmp/lambda-package/
WORKDIR /tmp/lambda-package/


# Now getting the package as zip
RUN yum install -y zip
RUN zip -r ../lambda-package.zip *

# Usage
# docker build -f /home/vince/dev/docker-py-opencv3/Dockerfile-aws -t docker-py-opencv-aws .
# docker run -ti docker-py-opencv-aws